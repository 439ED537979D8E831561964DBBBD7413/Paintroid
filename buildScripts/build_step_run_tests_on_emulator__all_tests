#!/usr/bin/env python3

import os
import sys
import subprocess

os.environ['SCRIPT_DIR'] = os.path.dirname(os.path.realpath(__file__))
os.environ['REPO_DIR'] = os.path.realpath(os.path.join(os.environ['SCRIPT_DIR'], ".."))

import build_helper_functions

def usage():
    print(sys.argv[0] + """

This script is a simple wrapper for the build_helper_run_tests_on_emulator which
allows to build a specific class or package, but currently all tests are run.

The environment variable ANDROID_SDK_ROOT needs to be set.

Be aware that Jenkins cleans the workspace before every build, this can
be partly replicated by './gradlew clean'.""")

build_helper_functions.check_number_of_parameters(valid_param_count=0, usage_func=usage)

# Run Unit and device tests for all tests
test_runner_cmd = build_helper_functions.get_build_scripts_executable('build_helper_run_tests_on_emulator')

print("Calling: " + " ".join(test_runner_cmd))
return_code = subprocess.run( test_runner_cmd ).returncode
sys.exit(return_code)
